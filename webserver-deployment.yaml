apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: webserver
  name: webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: webserver
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/app-network: "true"
        io.kompose.service: webserver
    spec:
      containers:
      - image: nginx:alpine
        imagePullPolicy: ""
        name: webserver
        ports:
        - containerPort: 80
        - containerPort: 5000
        - containerPort: 443
        resources: {}
        tty: true
        volumeMounts:
        - mountPath: /var/www/gateway
          name: webserver-claim0
        - mountPath: /var/www/basic
          name: webserver-claim1
        - mountPath: /etc/nginx/nginx.conf
          name: webserver-claim2
        - mountPath: /etc/nginx/conf.d/
          name: webserver-claim3
        - mountPath: /etc/ssl/
          name: webserver-claim4
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: webserver-claim0
        persistentVolumeClaim:
          claimName: webserver-claim0
      - name: webserver-claim1
        persistentVolumeClaim:
          claimName: webserver-claim1
      - name: webserver-claim2
        persistentVolumeClaim:
          claimName: webserver-claim2
      - name: webserver-claim3
        persistentVolumeClaim:
          claimName: webserver-claim3
      - name: webserver-claim4
        persistentVolumeClaim:
          claimName: webserver-claim4
status: {}
